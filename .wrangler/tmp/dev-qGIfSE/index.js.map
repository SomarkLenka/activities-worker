{
  "version": 3,
  "sources": ["../bundle-sW1d5E/checked-fetch.js", "../../../node_modules/nanoid/url-alphabet/index.js", "../../../node_modules/nanoid/index.browser.js", "../../../src/spa.js", "../../../src/pdf.js", "../../../src/mail.js", "../../../src/resp.js", "../../../src/index.mjs", "../../../../../../../../../home/somark/.nvm/versions/node/v23.11.1/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../../home/somark/.nvm/versions/node/v23.11.1/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-sW1d5E/middleware-insertion-facade.js", "../../../../../../../../../home/somark/.nvm/versions/node/v23.11.1/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-sW1d5E/middleware-loader.entry.ts"],
  "sourceRoot": "/mnt/c/Users/scrap/dev/cf/.wrangler/tmp/dev-qGIfSE",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n", "/* @ts-self-types=\"./index.d.ts\" */\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n", "export async function htmlPage (env) {\n  // property list pulled once from KV and embedded as <script> blob\n  const propsJSON = await env.PROPS_KV.get('props', 'text') || '[]';\n  const props64   = btoa(unescape(encodeURIComponent(propsJSON)));\n\n  return new Response(`\n<!doctype html>\n<html lang=\"en\"><meta charset=\"utf-8\">\n<title>Activity Waiver</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<style>\n  body{font-family:system-ui;margin:2rem auto;max-width:640px;padding:0 1rem}\n  label{display:block;margin:.4rem 0}\n  canvas{border:1px solid #999;width:100%;touch-action:none}\n  .activities-grid{display:grid;grid-template-columns:1fr 1fr;gap:12px;padding:10px;background:#f5f5f5;border-radius:8px}\n  .activity-item{display:flex;align-items:center;padding:8px;background:white;border-radius:4px;border:1px solid #ddd;cursor:pointer;transition:all 0.2s}\n  .activity-item:hover{background:#f0f7ff;border-color:#0070f3}\n  .activity-item input[type=\"checkbox\"]{margin-right:8px;cursor:pointer;width:18px;height:18px}\n  .activity-item label{margin:0;cursor:pointer;flex:1}\n  .activity-item input[type=\"text\"]{margin-left:auto;width:50px;text-align:center;padding:4px;border:1px solid #ccc;border-radius:4px}\n  @media (max-width:480px){.activities-grid{grid-template-columns:1fr}}\n</style>\n\n<body>\n  <h1>Sign your waiver</h1>\n  <form id=\"form\">\n    <label>Property\n      <select id=\"prop\"></select>\n    </label>\n\n    <label>Check-in\n      <input type=\"date\" id=\"date\" required>\n    </label>\n\n    <label>Name\n      <input id=\"name\" required>\n    </label>\n\n    <label>E-mail\n      <input id=\"email\" type=\"email\" required>\n    </label>\n\n    <h3>Activities</h3>\n    <div id=\"activities\" class=\"activities-grid\"></div>\n\n    <label>\n      <input id=\"master\" type=\"checkbox\" required>\n      I have read and accept all risks.\n    </label>\n\n    <h3>Signature</h3>\n    <canvas id=\"sign\" width=\"600\" height=\"200\"></canvas><br>\n    <button id=\"clearSig\" type=\"button\">Clear</button><br><br>\n\n    <button id=\"submit\">Submit</button>\n  </form>\n\n  <div id=\"thanks\" hidden></div>\n\n<script type=\"module\">\n  /* ---------- bootstrap property list -------------------- */\n  let props = JSON.parse(atob('${props64}'));\n  console.log(\"Raw props data:\", props);\n\n  // Handle both array and single object formats\n  if (!Array.isArray(props)) {\n    props = [props];\n  }\n  console.log(\"Props after array check:\", props);\n\n  const propSel = document.getElementById('prop');\n  props.forEach(p => propSel.add(new Option(p.name, p.id)));\n\n  /* ---------- activity checkboxes ------------------------- */\n  const actsDiv      = document.getElementById('activities');\n  const masterCheck  = document.getElementById('master');\n  const chosen       = new Map(); // slug -> {itemDiv, initialInput}\n\n  const activities = props[0]?.activities ?? [];   // assumes all props share list\n  console.log(\"Activities array:\", activities);\n  console.log(\"Activities container:\", actsDiv);\n  activities.forEach(a => {\n    const itemDiv = document.createElement('div');\n    itemDiv.className = 'activity-item';\n\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.id = 'activity-' + a.slug;\n    checkbox.value = a.slug;\n\n    const label = document.createElement('label');\n    label.htmlFor = 'activity-' + a.slug;\n    label.textContent = a.label;\n\n    const initialInput = document.createElement('input');\n    initialInput.type = 'text';\n    initialInput.maxLength = 4;\n    initialInput.placeholder = 'Init';\n    initialInput.style.display = 'none';\n    initialInput.dataset.slug = a.slug;\n    initialInput.oninput = validateMasterCheckbox;\n\n    checkbox.onchange = () => {\n      if (checkbox.checked) {\n        chosen.set(a.slug, {itemDiv, initialInput});\n        initialInput.style.display = 'block';\n      } else {\n        chosen.delete(a.slug);\n        initialInput.style.display = 'none';\n        initialInput.value = '';\n      }\n      validateMasterCheckbox();\n    };\n\n    itemDiv.appendChild(checkbox);\n    itemDiv.appendChild(label);\n    itemDiv.appendChild(initialInput);\n\n    // Make entire div clickable except initial input\n    itemDiv.onclick = (e) => {\n      if (e.target !== initialInput) {\n        checkbox.checked = !checkbox.checked;\n        checkbox.onchange();\n      }\n    };\n\n    actsDiv.appendChild(itemDiv);\n  });\n\n  function validateMasterCheckbox() {\n    let allFilled = true;\n    for (const [slug, {initialInput}] of chosen) {\n      if (!initialInput.value.trim()) {\n        allFilled = false;\n        break;\n      }\n    }\n    masterCheck.disabled = !allFilled || chosen.size === 0;\n    if (masterCheck.disabled) {\n      masterCheck.checked = false;\n    }\n  }\n\n  validateMasterCheckbox();\n\n  /* ---------- signature pad -------------------------------- */\n  const canvas = document.getElementById('sign');\n  const ctx    = canvas.getContext('2d', { willReadFrequently: true });\n  let drawing  = false;\n\n  canvas.addEventListener('pointerdown', e => {\n    drawing = true;\n    ctx.moveTo(e.offsetX, e.offsetY);\n  });\n  canvas.addEventListener('pointermove', e => {\n    if (!drawing) return;\n    ctx.lineTo(e.offsetX, e.offsetY);\n    ctx.stroke();\n  });\n  canvas.addEventListener('pointerup', () => drawing = false);\n  document.getElementById('clearSig').onclick =\n    () => ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  /* ---------- submit --------------------------------------- */\n  document.getElementById('form').onsubmit = async e => {\n    e.preventDefault();\n\n    const data = {\n      propertyId  : propSel.value,\n      checkinDate : document.getElementById('date').value,\n      guestName   : document.getElementById('name').value,\n      guestEmail  : document.getElementById('email').value,\n      activities  : [...chosen.keys()],\n      initials    : Object.fromEntries(\n                      [...chosen.entries()].map(([slug, {initialInput}]) =>\n                        [slug, initialInput.value])),\n      signature   : canvas.toDataURL(),\n      accepted    : document.getElementById('master').checked\n    };\n\n    console.log(\"Submitting data:\", data);\n\n    try {\n      const res  = await fetch('/submit', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n\n      console.log(\"Response status:\", res.status);\n\n      if (!res.ok) {\n        const errorText = await res.text();\n        console.error(\"Server error:\", errorText);\n        alert(\"Error submitting form: \" + errorText);\n        return;\n      }\n\n      const json = await res.json();\n      console.log(\"Response data:\", json);\n\n    document.getElementById('form').hidden   = true;\n    document.getElementById('thanks').hidden = false;\n\n    if (json.devMode) {\n      // Development mode - show download links\n      let html = '<h2>Waivers Generated \u2714</h2>';\n      html += '<p>Download your waivers:</p>';\n      html += '<div style=\"display:flex;flex-direction:column;gap:10px;margin:20px 0\">';\n\n      // Create download buttons for each PDF\n      json.downloads.forEach(pdf => {\n        html += \\`<button onclick=\"window.open('\\${pdf.url}', '_blank')\" \\`;\n        html += 'style=\"padding:10px 20px;background:#0070f3;color:#fff;border:none;';\n        html += 'border-radius:6px;cursor:pointer;font-size:16px\">';\n        html += '\uD83D\uDCC4 Download ' + pdf.filename + '</button>';\n      });\n\n      html += '</div>';\n\n      // Add button to download all at once\n      if (json.downloads.length > 1) {\n        html += '<button onclick=\"';\n        json.downloads.forEach(pdf => {\n          html += \\`window.open('\\${pdf.url}', '_blank');\\`;\n        });\n        html += '\" style=\"padding:12px 24px;background:#28a745;color:#fff;border:none;';\n        html += 'border-radius:6px;cursor:pointer;font-size:16px;margin-top:10px\">';\n        html += '\uD83D\uDCE6 Download All (' + json.downloads.length + ' PDFs)</button>';\n      }\n\n      if (json.pin) {\n        html += '<p style=\"margin-top:20px\">Your Archery PIN is <b>' + json.pin + '</b></p>';\n      }\n\n      html += '<p style=\"margin-top:20px;color:#666;font-size:14px\">';\n      html += '\u26A0\uFE0F Development Mode - PDFs are stored but not emailed</p>';\n\n      document.getElementById('thanks').innerHTML = html;\n    } else {\n      // Production mode - email confirmation\n      document.getElementById('thanks').innerHTML =\n        '<h2>Email sent \u2714</h2><p>Attachments:<br>' +\n        json.emailed.join('<br>') + '</p>' +\n        (json.pin ? '<p>Your Archery PIN is <b>' + json.pin + '</b></p>' : '');\n    }\n    } catch (error) {\n      console.error(\"Form submission error:\", error);\n      alert(\"Error submitting form: \" + error.message);\n    }\n  };\n</script>\n</body>\n</html>`, {\n    headers: { 'content-type': 'text/html; charset=utf-8' }\n  });\n}\n", "import { nanoid } from 'nanoid';\n\nexport async function makePDFs (data, subId, env) {\n  const now = new Date();\n  const y = now.getUTCFullYear();\n  const m = String(now.getUTCMonth() + 1).padStart(2, '0');\n  const d = String(now.getUTCDate()).padStart(2, '0');\n\n  const results = [];\n\n  for (const act of data.activities) {\n    /* ----- minimal HTML template ---------------------------------- */\n    const html = `\n    <!doctype html><meta charset=\"utf-8\">\n    <style>body{font-family:Arial;font-size:11pt;margin:2cm}</style>\n    <h1>${act.toUpperCase()} \u2014 Release of Liability</h1>\n    <p>Property  : ${data.propertyId}</p>\n    <p>Check-in  : ${data.checkinDate}</p>\n    <p>Guest     : ${data.guestName}</p>\n    <p>Initials  : ${data.initials[act]}</p>\n    <img src=\"${data.signature}\" width=\"300\">\n    <footer style=\"position:fixed;bottom:1cm;font-size:8pt;width:100%;text-align:center\">\n      Version ${env.LEGAL_VERSION} \u2022 hash ${subId}\n    </footer>`;\n\n    /* ----- Cloudflare Browser Rendering --------------------------- */\n    const pdfBuffer = await env.BROWSER.htmlToPdf({ body: html, cf: { format: 'A4' } });\n\n    /* ----- deterministic R2 key ----------------------------------- */\n    const shortId  = nanoid(6);\n    const filename = `${act}.pdf`;\n    const key      = `waivers/${y}/${m}/${d}/${data.propertyId}/${act}/` +\n                     `${data.guestName.toLowerCase().replace(/[^a-z]/g,'-')}-${shortId}.pdf`;\n\n    await env.WAIVERS_R2.put(key, pdfBuffer, {\n      httpMetadata: { contentType: 'application/pdf' }\n    });\n\n    results.push({ id: shortId, activity: act, filename, r2Key: key, bytes: pdfBuffer });\n  }\n\n  return results;\n}\n", "export async function sendMail (data, pdfs, pin, env) {\n  const boundary = 'BOUNDARY-' + Math.random().toString(36).slice(2);\n  let body = '';\n\n  /* ---- headers -------------------------------------------------- */\n  body += `From: ${env.EMAIL_FROM}\\r\\n`;\n  body += `To: ${data.guestEmail}\\r\\n`;\n  body += `Subject: Your activity waiver(s)\\r\\n`;\n  body += 'MIME-Version: 1.0\\r\\n';\n  body += `Content-Type: multipart/mixed; boundary=${boundary}\\r\\n\\r\\n`;\n\n  /* ---- plain-text part ------------------------------------------ */\n  body += `--${boundary}\\r\\n`;\n  body += 'Content-Type: text/plain; charset=utf-8\\r\\n\\r\\n';\n  body += `Hi ${data.guestName},\n\nThank you for completing your waiver for ${data.propertyId}.\nAttached:${pdfs.map(p => ' ' + p.filename).join(', ')}\n\n${pin ? 'Your Archery PIN is ' + pin + '\\n\\n' : ''}\nRegards,\nThe Rentals Team\n\\r\\n`;\n\n  /* ---- one attachment per PDF ----------------------------------- */\n  for (const p of pdfs) {\n    body += `--${boundary}\\r\\n`;\n    body += 'Content-Type: application/pdf\\r\\n';\n    body += 'Content-Transfer-Encoding: base64\\r\\n';\n    body += `Content-Disposition: attachment; filename=\"${p.filename}\"\\r\\n\\r\\n`;\n    body += btoa(String.fromCharCode(...new Uint8Array(p.bytes))) + '\\r\\n';\n  }\n  body += `--${boundary}--`;\n\n  /* ---- send ------------------------------------------------------ */\n  await fetch('https://api.cloudflare.com/client/v4/accounts/' +\n              env.CLOUDFLARE_ACCOUNT_ID + '/email/send', {\n    method:  'POST',\n    headers: {\n      'Content-Type': 'text/plain',\n      'Authorization': 'Bearer ' + env.CLOUDFLARE_API_TOKEN   // put as secret\n    },\n    body\n  });\n}\n", "export const json = (obj, status = 200) =>\n  new Response(JSON.stringify(obj), {\n    status,\n    headers: { 'content-type': 'application/json' }\n  });\n\nexport const bad = msg => json({ ok: false, error: msg }, 400);\n", "import { nanoid }          from 'nanoid';\nimport { htmlPage }        from './spa.js';\nimport { makePDFs }        from './pdf.js';\nimport { sendMail }        from './mail.js';\nimport { json, bad }       from './resp.js';\n\nexport default {\n  async fetch (request, env, ctx) {\n    const { pathname } = new URL(request.url);\n\n    try {\n      if (request.method === 'GET'  && pathname === '/')              return await htmlPage(env);\n      if (request.method === 'POST' && pathname === '/submit')        return submit(request, env);\n      if (request.method === 'GET'  && pathname === '/admin/search')  return search(request, env);\n      if (request.method === 'GET'  && pathname === '/status')        return status(env);\n      if (request.method === 'GET'  && pathname.startsWith('/download/')) return downloadPDF(request, env);\n      return new Response('Not found', { status: 404 });\n    } catch (err) {\n      console.error(err);\n      return new Response('Server error', { status: 500 });\n    }\n  }\n};\n\n/* ---------- /status ---------------------------------------------------- */\nasync function status (env) {\n  try {\n    const dbOK = await env.waivers.prepare('SELECT 1').first();\n    return json({ ok: true, db: !!dbOK, ts: Date.now() });\n  } catch (error) {\n    return json({ ok: false, error: error.message, ts: Date.now() });\n  }\n}\n\n/* ---------- /admin/search --------------------------------------------- */\nasync function search (request, env) {\n  const url = new URL(request.url);\n  const qName  = url.searchParams.get('name')  ?? '';\n  const qEmail = url.searchParams.get('email') ?? '';\n  const qProp  = url.searchParams.get('prop')  ?? '';\n  const qDate  = url.searchParams.get('date')  ?? '';\n\n  const rows = await env.waivers.prepare(\n      `SELECT * FROM submissions\n        WHERE guest_name  LIKE ?1\n          AND guest_email LIKE ?2\n          AND property_id LIKE ?3\n          AND checkin_date LIKE ?4\n        ORDER BY created_at DESC\n        LIMIT 200`\n    )\n    .bind(`%${qName}%`, `%${qEmail}%`, `%${qProp}%`, `%${qDate}%`)\n    .all();\n\n  return json({ rows });\n}\n\n/* ---------- /submit ---------------------------------------------------- */\nasync function submit (request, env) {\n  console.log('Submit endpoint called');\n  const data = await request.json();\n  console.log('Received data:', data);\n\n  /* ---- quick validation ------------------------------------------------ */\n  const must = ['propertyId','checkinDate','guestName','guestEmail',\n                'activities','initials','signature','accepted'];\n  for (const k of must)\n    if (data[k] === undefined || data[k] === '' ||\n        (Array.isArray(data[k]) && !data[k].length))\n      return bad(`missing ${k}`);\n\n  if (data.accepted !== true)\n    return bad('master acceptance not ticked');\n\n  /* ---- write one submission row --------------------------------------- */\n  const subId = nanoid(10);\n  const now   = new Date().toISOString();\n\n  try {\n    await env.waivers.prepare(\n        'INSERT INTO submissions VALUES(?1,?2,?3,?4,?5,?6,?7)'\n      ).bind(\n        subId, now, data.propertyId, data.checkinDate,\n        data.guestName, data.guestEmail, JSON.stringify(data.activities)\n      ).run();\n    console.log('Submission saved to database');\n  } catch (dbError) {\n    console.error('Database error:', dbError);\n    return json({ ok: false, error: 'Database not initialized. Run migrations first.' }, 500);\n  }\n\n  /* ---- generate N PDFs ------------------------------------------------- */\n  let pdfInfos;\n  try {\n    pdfInfos = await makePDFs(data, subId, env);\n    console.log('PDFs generated:', pdfInfos.length);\n  } catch (pdfError) {\n    console.error('PDF generation error:', pdfError);\n    return json({ ok: false, error: 'PDF generation failed: ' + pdfError.message }, 500);\n  }\n\n  /* ---- one row per PDF ------------------------------------------------- */\n  try {\n    for (const p of pdfInfos)\n      await env.waivers.prepare(\n          'INSERT INTO documents VALUES(?1,?2,?3,?4)'\n        ).bind(p.id, subId, p.activity, p.r2Key).run();\n    console.log('Document records saved');\n  } catch (docError) {\n    console.error('Document save error:', docError);\n  }\n\n  const pin = data.activities.includes('archery') ? env.ARCHERY_PIN : null;\n\n  /* ---- check if in dev mode -------------------------------------------- */\n  if (env.DEV_MODE === 'true') {\n    // In dev mode, return download URLs instead of sending email\n    const downloads = pdfInfos.map(p => ({\n      filename: p.filename,\n      url: `/download/${p.r2Key}`\n    }));\n\n    return json({\n      ok: true,\n      devMode: true,\n      downloads,\n      pin\n    });\n  }\n\n  /* ---- e-mail (production only) ---------------------------------------- */\n  await sendMail(data, pdfInfos, pin, env);\n\n  return json({ ok: true,\n                emailed: pdfInfos.map(p => p.filename),\n                pin });\n}\n\n/* ---------- /download/:key --------------------------------------------- */\nasync function downloadPDF (request, env) {\n  const { pathname } = new URL(request.url);\n  const r2Key = pathname.replace('/download/', '');\n\n  // Only allow in dev mode\n  if (env.DEV_MODE !== 'true') {\n    return new Response('Downloads only available in dev mode', { status: 403 });\n  }\n\n  const object = await env.WAIVERS_R2.get(r2Key);\n\n  if (!object) {\n    return new Response('PDF not found', { status: 404 });\n  }\n\n  // Extract filename from the key\n  const filename = r2Key.split('/').pop();\n\n  return new Response(object.body, {\n    headers: {\n      'Content-Type': 'application/pdf',\n      'Content-Disposition': `attachment; filename=\"${filename}\"`,\n      'Cache-Control': 'private, max-age=300'\n    }\n  });\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/mnt/c/Users/scrap/dev/cf/src/index.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/somark/.nvm/versions/node/v23.11.1/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/somark/.nvm/versions/node/v23.11.1/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/mnt/c/Users/scrap/dev/cf/src/index.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/mnt/c/Users/scrap/dev/cf/.wrangler/tmp/bundle-sW1d5E/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/somark/.nvm/versions/node/v23.11.1/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/mnt/c/Users/scrap/dev/cf/.wrangler/tmp/bundle-sW1d5E/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/mnt/c/Users/scrap/dev/cf/.wrangler/tmp/bundle-sW1d5E/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["status"]
}
